// Generated by view binder compiler. Do not edit!
package com.example.prueba_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prueba_2.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCambiarContra2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnCambiarClave;

  @NonNull
  public final MaterialButton btnSalir;

  @NonNull
  public final TextInputEditText etContraActual;

  @NonNull
  public final TextInputEditText etNewPassword;

  @NonNull
  public final TextInputEditText etNewPassword2;

  @NonNull
  public final TextInputLayout tilContraActual;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextInputLayout tilPassword2;

  @NonNull
  public final TextView tiltitulo;

  private ActivityCambiarContra2Binding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnCambiarClave, @NonNull MaterialButton btnSalir,
      @NonNull TextInputEditText etContraActual, @NonNull TextInputEditText etNewPassword,
      @NonNull TextInputEditText etNewPassword2, @NonNull TextInputLayout tilContraActual,
      @NonNull TextInputLayout tilPassword, @NonNull TextInputLayout tilPassword2,
      @NonNull TextView tiltitulo) {
    this.rootView = rootView;
    this.btnCambiarClave = btnCambiarClave;
    this.btnSalir = btnSalir;
    this.etContraActual = etContraActual;
    this.etNewPassword = etNewPassword;
    this.etNewPassword2 = etNewPassword2;
    this.tilContraActual = tilContraActual;
    this.tilPassword = tilPassword;
    this.tilPassword2 = tilPassword2;
    this.tiltitulo = tiltitulo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCambiarContra2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCambiarContra2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cambiar_contra2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCambiarContra2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCambiarClave;
      MaterialButton btnCambiarClave = ViewBindings.findChildViewById(rootView, id);
      if (btnCambiarClave == null) {
        break missingId;
      }

      id = R.id.btnSalir;
      MaterialButton btnSalir = ViewBindings.findChildViewById(rootView, id);
      if (btnSalir == null) {
        break missingId;
      }

      id = R.id.etContraActual;
      TextInputEditText etContraActual = ViewBindings.findChildViewById(rootView, id);
      if (etContraActual == null) {
        break missingId;
      }

      id = R.id.etNewPassword;
      TextInputEditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.etNewPassword2;
      TextInputEditText etNewPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword2 == null) {
        break missingId;
      }

      id = R.id.tilContraActual;
      TextInputLayout tilContraActual = ViewBindings.findChildViewById(rootView, id);
      if (tilContraActual == null) {
        break missingId;
      }

      id = R.id.tilPassword;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tilPassword2;
      TextInputLayout tilPassword2 = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword2 == null) {
        break missingId;
      }

      id = R.id.tiltitulo;
      TextView tiltitulo = ViewBindings.findChildViewById(rootView, id);
      if (tiltitulo == null) {
        break missingId;
      }

      return new ActivityCambiarContra2Binding((ConstraintLayout) rootView, btnCambiarClave,
          btnSalir, etContraActual, etNewPassword, etNewPassword2, tilContraActual, tilPassword,
          tilPassword2, tiltitulo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
